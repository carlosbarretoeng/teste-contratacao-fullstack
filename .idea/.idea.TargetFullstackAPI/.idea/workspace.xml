<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="http">WebApplication1/WebApplication1.csproj</projectFile>
    <projectFile profileName="https">WebApplication1/WebApplication1.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="1d98fd09-7f45-4d32-8b46-97377249d4e9" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/api/Controllers/PersonController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/Controllers/UserController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/Controllers/VehicleController.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/Models/LoginModel.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/api/Models/UserToken.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/DTOs/PersonDto.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/DTOs/UserDto.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/DTOs/VehicleDto.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Interfaces/IPersonService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Interfaces/IUserService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Interfaces/IVehicleService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Mappings/DomainToDtoMappingProfile.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Services/PersonService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Services/UserService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/application/Services/VehicleService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Authentication/IAuthenticate.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Entities/Person.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Entities/User.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Entities/Vehicle.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Interfaces/IPersonRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Interfaces/IUserRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Interfaces/IVehicleRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/domain/Validations/DomainExceptionValidation.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/_pages/page-register/page-register.component.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/_pages/page-register/page-register.component.html" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/_pages/page-register/page-register.component.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/frontend/src/app/_services/WeatherDataModel.ts" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/Authentication/AuthenticationService.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/Context/ApplicationDbContext.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/EntityConfigurations/PersonConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/EntityConfigurations/UserConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/EntityConfigurations/VehicleConfiguration.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/Repositories/PersonRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/Repositories/UserRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.data/Repositories/VehicleRepository.cs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/infra.ioc/DependencyInjection.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.TargetFullstackAPI/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.TargetFullstackAPI/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.TargetFullstackAPI/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.TargetFullstackAPI/Docker/docker-compose.generated.override.yml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/api/Program.cs" beforeDir="false" afterPath="$PROJECT_DIR$/api/Program.cs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/Properties/launchSettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/api/Properties/launchSettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/api.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/api/api.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api/appsettings.json" beforeDir="false" afterPath="$PROJECT_DIR$/api/appsettings.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/application/Class1.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/application/application.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/application/application.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/angular.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/angular.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package-lock.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.html" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.component.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.component.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.component.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/app/app.routes.ts" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/app/app.routes.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/index.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/frontend/src/styles.css" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/styles.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infra.data/Class1.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/infra.data/infra.data.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/infra.data/infra.data.csproj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/infra.ioc/Class1.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/infra.ioc/infra.ioc.csproj" beforeDir="false" afterPath="$PROJECT_DIR$/infra.ioc/infra.ioc.csproj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="firstShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;carlosbarretoeng&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/carlosbarretoeng/teste-contratacao-fullstack.git&quot;,
    &quot;accountId&quot;: &quot;28484b3a-4478-4a00-9b78-642797490aa7&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2rdWRYCbEtK0KqmalQcTz03entS" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.WebApplication1: https.executor": "Run",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.docker-compose.yml.angular: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml.api: Compose Deployment.executor": "Run",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "Docker.frontend/Dockerfile.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "git-widget-placeholder": "master",
    "ignore.virus.scanning.warn.message": "true",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "sqlserver.localdb",
      "sqlserver"
    ]
  }
}]]></component>
  <component name="RunManager" selected=".NET Launch Settings Profile.WebApplication1: https">
    <configuration name="WebApplication1: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/api/api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="WebApplication1: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/api/api.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="dockerfile" temporary="true">
      <deployment type="dockerfile">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="api/Dockerfile" type="docker-deploy" factoryName="dockerfile" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="imageTag" value="api" />
          <option name="containerName" value="api" />
          <option name="contextFolderPath" value="D:\Target\TargetFullstackAPI" />
          <option name="portBindings">
            <list>
              <DockerPortBindingImpl>
                <option name="containerPort" value="8080" />
                <option name="hostIp" value="127.0.0.1" />
                <option name="hostPort" value="8080" />
              </DockerPortBindingImpl>
            </list>
          </option>
          <option name="sourceFilePath" value="api/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.angular: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="angular" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.api: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="api" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="frontend/Dockerfile" type="docker-deploy" factoryName="dockerfile" temporary="true" server-name="Docker">
      <deployment type="dockerfile">
        <settings>
          <option name="sourceFilePath" value="frontend/Dockerfile" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.api: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.angular: Compose Deployment" />
        <item itemvalue="Docker.frontend/Dockerfile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="1d98fd09-7f45-4d32-8b46-97377249d4e9" name="Changes" comment="" />
      <created>1736889425228</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1736889425228</updated>
      <workItem from="1736889426780" duration="3396000" />
      <workItem from="1736892973484" duration="276000" />
      <workItem from="1736902659189" duration="4130000" />
      <workItem from="1736940112183" duration="6977000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnityProjectConfiguration" hasMinimizedUI="false" />
  <component name="VcsManagerConfiguration">
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
  </component>
</project>